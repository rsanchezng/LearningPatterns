import * as tslib_1 from "tslib";
/*
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
import { Component, Input } from '@angular/core';
var JhiMetricsCacheComponent = /** @class */ (function () {
    function JhiMetricsCacheComponent() {
    }
    JhiMetricsCacheComponent.prototype.filterNaN = function (input) {
        if (isNaN(input)) {
            return 0;
        }
        return input;
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], JhiMetricsCacheComponent.prototype, "cacheMetrics", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], JhiMetricsCacheComponent.prototype, "updating", void 0);
    JhiMetricsCacheComponent = tslib_1.__decorate([
        Component({
            selector: 'jhi-metrics-cache',
            template: "\n        <h3 jhiTranslate=\"metrics.cache.title\">Cache statistics</h3>\n        <div class=\"table-responsive\" *ngIf=\"!updating\">\n            <table class=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th jhiTranslate=\"metrics.cache.cachename\">Cache name</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hits\">Cache Hits</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.misses\">Cache Misses</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.gets\">Cache Gets</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.puts\">Cache Puts</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.removals\">Cache Removals</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.evictions\">Cache Evictions</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.hitPercent\">Cache Hit %</th>\n                        <th class=\"text-right\" data-translate=\"metrics.cache.missPercent\">Cache Miss %</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let entry of (cacheMetrics | keys)\">\n                        <td>{{ entry.key }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.puts'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.removals'] }}</td>\n                        <td class=\"text-right\">{{ entry.value['cache.evictions'] }}</td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.hit']) / (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                        <td class=\"text-right\">\n                            {{\n                                filterNaN(\n                                    (100 * entry.value['cache.gets.miss']) /\n                                        (entry.value['cache.gets.hit'] + entry.value['cache.gets.miss'])\n                                ) | number: '1.0-4'\n                            }}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    "
        })
    ], JhiMetricsCacheComponent);
    return JhiMetricsCacheComponent;
}());
export { JhiMetricsCacheComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamhpLW1ldHJpY3MtY2FjaGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctamhpcHN0ZXIvIiwic291cmNlcyI6WyJjb21wb25lbnQvbWV0cmljcy9qaGktbWV0cmljcy1jYWNoZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBbURqRDtJQUFBO0lBaUJBLENBQUM7SUFORyw0Q0FBUyxHQUFULFVBQVUsS0FBSztRQUNYLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ2QsT0FBTyxDQUFDLENBQUM7U0FDWjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFaUTtRQUFSLEtBQUssRUFBRTs7a0VBQWtCO0lBS2pCO1FBQVIsS0FBSyxFQUFFOzs4REFBbUI7SUFUbEIsd0JBQXdCO1FBakRwQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFFBQVEsRUFBRSxnMEZBNkNUO1NBQ0osQ0FBQztPQUNXLHdCQUF3QixDQWlCcEM7SUFBRCwrQkFBQztDQUFBLEFBakJELElBaUJDO1NBakJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gQ29weXJpZ2h0IDIwMTMtMjAxOSB0aGUgb3JpZ2luYWwgYXV0aG9yIG9yIGF1dGhvcnMgZnJvbSB0aGUgSkhpcHN0ZXIgcHJvamVjdC5cblxuIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBKSGlwc3RlciBwcm9qZWN0LCBzZWUgaHR0cHM6Ly93d3cuamhpcHN0ZXIudGVjaC9cbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cblxuIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2poaS1tZXRyaWNzLWNhY2hlJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8aDMgamhpVHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS50aXRsZVwiPkNhY2hlIHN0YXRpc3RpY3M8L2gzPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGFibGUtcmVzcG9uc2l2ZVwiICpuZ0lmPVwiIXVwZGF0aW5nXCI+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkXCI+XG4gICAgICAgICAgICAgICAgPHRoZWFkPlxuICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggamhpVHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5jYWNoZW5hbWVcIj5DYWNoZSBuYW1lPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInRleHQtcmlnaHRcIiBkYXRhLXRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUuaGl0c1wiPkNhY2hlIEhpdHM8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5taXNzZXNcIj5DYWNoZSBNaXNzZXM8L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwidGV4dC1yaWdodFwiIGRhdGEtdHJhbnNsYXRlPVwibWV0cmljcy5jYWNoZS5nZXRzXCI+Q2FjaGUgR2V0czwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLnB1dHNcIj5DYWNoZSBQdXRzPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInRleHQtcmlnaHRcIiBkYXRhLXRyYW5zbGF0ZT1cIm1ldHJpY3MuY2FjaGUucmVtb3ZhbHNcIj5DYWNoZSBSZW1vdmFsczwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLmV2aWN0aW9uc1wiPkNhY2hlIEV2aWN0aW9uczwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLmhpdFBlcmNlbnRcIj5DYWNoZSBIaXQgJTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9XCJ0ZXh0LXJpZ2h0XCIgZGF0YS10cmFuc2xhdGU9XCJtZXRyaWNzLmNhY2hlLm1pc3NQZXJjZW50XCI+Q2FjaGUgTWlzcyAlPC90aD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPHRyICpuZ0Zvcj1cImxldCBlbnRyeSBvZiAoY2FjaGVNZXRyaWNzIHwga2V5cylcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBlbnRyeS5rZXkgfX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGV4dC1yaWdodFwiPnt7IGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLmhpdCddIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj57eyBlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5taXNzJ10gfX08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPVwidGV4dC1yaWdodFwiPnt7IGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLmhpdCddICsgZW50cnkudmFsdWVbJ2NhY2hlLmdldHMubWlzcyddIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj57eyBlbnRyeS52YWx1ZVsnY2FjaGUucHV0cyddIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj57eyBlbnRyeS52YWx1ZVsnY2FjaGUucmVtb3ZhbHMnXSB9fTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+e3sgZW50cnkudmFsdWVbJ2NhY2hlLmV2aWN0aW9ucyddIH19PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1cInRleHQtcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJOYU4oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoMTAwICogZW50cnkudmFsdWVbJ2NhY2hlLmdldHMuaGl0J10pIC8gKGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLmhpdCddICsgZW50cnkudmFsdWVbJ2NhY2hlLmdldHMubWlzcyddKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHwgbnVtYmVyOiAnMS4wLTQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9XCJ0ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyTmFOKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKDEwMCAqIGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLm1pc3MnXSkgL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlbnRyeS52YWx1ZVsnY2FjaGUuZ2V0cy5oaXQnXSArIGVudHJ5LnZhbHVlWydjYWNoZS5nZXRzLm1pc3MnXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB8IG51bWJlcjogJzEuMC00J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICBgXG59KVxuZXhwb3J0IGNsYXNzIEpoaU1ldHJpY3NDYWNoZUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogb2JqZWN0IGNvbnRhaW5pbmcgYWxsIGNhY2hlIHJlbGF0ZWQgbWV0cmljc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIGNhY2hlTWV0cmljczoge307XG5cbiAgICAvKipcbiAgICAgKiBib29sZWFuIGZpZWxkIHNheWluZyBpZiB0aGUgbWV0cmljcyBhcmUgaW4gdGhlIHByb2Nlc3Mgb2YgYmVpbmcgdXBkYXRlZFxuICAgICAqL1xuICAgIEBJbnB1dCgpIHVwZGF0aW5nOiBib29sZWFuO1xuXG4gICAgZmlsdGVyTmFOKGlucHV0KSB7XG4gICAgICAgIGlmIChpc05hTihpbnB1dCkpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG59XG4iXX0=