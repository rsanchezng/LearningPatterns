{"version":3,"sources":["../index.js"],"names":["BaseHrefWebpackPlugin","options","compiler","baseHref","hooks","compilation","tap","htmlWebpackPluginBeforeHtmlProcessing","tapAsync","data","callback","baseTagRegex","baseTagMatches","html","match","replace","modifiedBaseTag"],"mappings":";;;;;;;;;;IAAaA,qB,WAAAA,qB;AACX,iCAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA;;;;0BAEIC,Q,EAAU;AAAA;;AACd,UAAI,CAAC,KAAKD,OAAL,CAAaE,QAAlB,EAA4B;AAC1B;AACD;;AAEDD,eAASE,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,uBAA/B,EAAwD,UAACD,WAAD,EAAiB;AACvEA,oBAAYD,KAAZ,CAAkBG,qCAAlB,CAAwDC,QAAxD,CAAiE,uBAAjE,EAA0F,UAACC,IAAD,EAAOC,QAAP,EAAoB;AAC5G;AACA,cAAMC,eAAe,YAArB;AACA,cAAMC,iBAAiBH,KAAKI,IAAL,CAAUC,KAAV,CAAgBH,YAAhB,CAAvB;AACA,cAAI,CAACC,cAAL,EAAqB;AACnB;AACAH,iBAAKI,IAAL,GAAYJ,KAAKI,IAAL,CAAUE,OAAV,CAAkB,SAAlB,EAA6B,yBAAsB,MAAKd,OAAL,CAAaE,QAAnC,QAA7B,CAAZ;AACD,WAHD,MAGO;AACL;AACA,gBAAMa,kBAAkBJ,eAAe,CAAf,EAAkBG,OAAlB,CAA0B,aAA1B,aAAkD,MAAKd,OAAL,CAAaE,QAA/D,OAAxB;AACAM,iBAAKI,IAAL,GAAYJ,KAAKI,IAAL,CAAUE,OAAV,CAAkBJ,YAAlB,EAAgCK,eAAhC,CAAZ;AACD;;AAEDN,mBAAS,IAAT,EAAeD,IAAf;AACD,SAdD;AAeD,OAhBD;AAiBD","file":"index.js","sourcesContent":["export class BaseHrefWebpackPlugin {\r\n  constructor(options) {\r\n    this.options = options;\r\n   }\r\n\r\n  apply(compiler) {\r\n    if (!this.options.baseHref) {\r\n      return;\r\n    }\r\n\r\n    compiler.hooks.compilation.tap('BaseHrefWebpackPlugin', (compilation) => {\r\n      compilation.hooks.htmlWebpackPluginBeforeHtmlProcessing.tapAsync('BaseHrefWebpackPlugin', (data, callback) => {\r\n        // Check if base tag already exists\r\n        const baseTagRegex = /<base.*?>/i;\r\n        const baseTagMatches = data.html.match(baseTagRegex);\r\n        if (!baseTagMatches) {\r\n          // Insert it in top of the head\r\n          data.html = data.html.replace(/<head>/i, '$&' + `<base href=\"${this.options.baseHref}\">`);\r\n        } else {\r\n          // Otherwise replace href attribute of current base tag\r\n          const modifiedBaseTag = baseTagMatches[0].replace(/href=\"\\S+\"/i, `href=\"${this.options.baseHref}\"`);\r\n          data.html = data.html.replace(baseTagRegex, modifiedBaseTag);\r\n        }\r\n\r\n        callback(null, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n"]}