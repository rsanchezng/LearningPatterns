/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Inject, Injectable } from '@angular/core';
import { CookieService } from './cookie.service';
import { CookieOptionsProvider } from './cookie-options-provider';
export class CookieBackendService extends CookieService {
    /**
     * @param {?} request
     * @param {?} response
     * @param {?} _optionsProvider
     */
    constructor(request, response, _optionsProvider) {
        super(_optionsProvider);
        this.request = request;
        this.response = response;
    }
    /**
     * @return {?}
     */
    get cookieString() {
        return this.request.headers.cookie || '';
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set cookieString(val) {
        this.request.headers.cookie = val;
        this.response.headers.cookie = val;
    }
}
CookieBackendService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
CookieBackendService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: ['REQUEST',] },] },
    { type: undefined, decorators: [{ type: Inject, args: ['RESPONSE',] },] },
    { type: CookieOptionsProvider, },
];
function CookieBackendService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    CookieBackendService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    CookieBackendService.ctorParameters;
    /** @type {?} */
    CookieBackendService.prototype.request;
    /** @type {?} */
    CookieBackendService.prototype.response;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLWJhY2tlbmQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb29raWUvIiwic291cmNlcyI6WyJsaWIvY29va2llLWJhY2tlbmQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBR2xFLE1BQU0sMkJBQTRCLFNBQVEsYUFBYTs7Ozs7O0lBRXJELFlBQzZCLFNBQ0MsVUFDNUIsZ0JBQXVDO1FBRXZDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBSkcsWUFBTyxHQUFQLE9BQU87UUFDTixhQUFRLEdBQVIsUUFBUTtLQUlyQzs7OztJQUVELElBQWMsWUFBWTtRQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztLQUMxQzs7Ozs7SUFFRCxJQUFjLFlBQVksQ0FBQyxHQUFXO1FBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFDbEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztLQUNwQzs7O1lBbEJGLFVBQVU7Ozs7NENBSU4sTUFBTSxTQUFDLFNBQVM7NENBQ2hCLE1BQU0sU0FBQyxVQUFVO1lBUGIscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IENvb2tpZVNlcnZpY2UgfSBmcm9tICcuL2Nvb2tpZS5zZXJ2aWNlJztcbmltcG9ydCB7IENvb2tpZU9wdGlvbnNQcm92aWRlciB9IGZyb20gJy4vY29va2llLW9wdGlvbnMtcHJvdmlkZXInO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ29va2llQmFja2VuZFNlcnZpY2UgZXh0ZW5kcyBDb29raWVTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KCdSRVFVRVNUJykgcHJpdmF0ZSByZXF1ZXN0OiBhbnksXG4gICAgQEluamVjdCgnUkVTUE9OU0UnKSBwcml2YXRlIHJlc3BvbnNlOiBhbnksXG4gICAgX29wdGlvbnNQcm92aWRlcjogQ29va2llT3B0aW9uc1Byb3ZpZGVyXG4gICkge1xuICAgIHN1cGVyKF9vcHRpb25zUHJvdmlkZXIpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldCBjb29raWVTdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0LmhlYWRlcnMuY29va2llIHx8ICcnO1xuICB9XG5cbiAgcHJvdGVjdGVkIHNldCBjb29raWVTdHJpbmcodmFsOiBzdHJpbmcpIHtcbiAgICB0aGlzLnJlcXVlc3QuaGVhZGVycy5jb29raWUgPSB2YWw7XG4gICAgdGhpcy5yZXNwb25zZS5oZWFkZXJzLmNvb2tpZSA9IHZhbDtcbiAgfVxufVxuIl19