{"remainingRequest":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","dependencies":[{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","mtime":1572964998671},{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7DQp2YXIgX2E7DQppbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7DQppbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOw0KaW1wb3J0IHsgbWFwLCBzaGFyZVJlcGxheSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsNCmltcG9ydCB7IFNFUlZFUl9BUElfVVJMIH0gZnJvbSAnYXBwL2FwcC5jb25zdGFudHMnOw0KaW1wb3J0IHsgUHJvZmlsZUluZm8gfSBmcm9tICcuL3Byb2ZpbGUtaW5mby5tb2RlbCc7DQpsZXQgUHJvZmlsZVNlcnZpY2UgPSBjbGFzcyBQcm9maWxlU2VydmljZSB7DQogICAgY29uc3RydWN0b3IoaHR0cCkgew0KICAgICAgICB0aGlzLmh0dHAgPSBodHRwOw0KICAgICAgICB0aGlzLmluZm9VcmwgPSBTRVJWRVJfQVBJX1VSTCArICdtYW5hZ2VtZW50L2luZm8nOw0KICAgIH0NCiAgICBnZXRQcm9maWxlSW5mbygpIHsNCiAgICAgICAgaWYgKHRoaXMucHJvZmlsZUluZm8kKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5wcm9maWxlSW5mbyQ7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5wcm9maWxlSW5mbyQgPSB0aGlzLmh0dHAuZ2V0KHRoaXMuaW5mb1VybCkucGlwZShtYXAoKHByb2ZpbGVJbmZvKSA9PiB7DQogICAgICAgICAgICBjb25zdCBwaSA9IG5ldyBQcm9maWxlSW5mbygpOw0KICAgICAgICAgICAgcGkuYWN0aXZlUHJvZmlsZXMgPSBwcm9maWxlSW5mby5hY3RpdmVQcm9maWxlczsNCiAgICAgICAgICAgIGNvbnN0IGRpc3BsYXlSaWJib25PblByb2ZpbGVzID0gcHJvZmlsZUluZm9bJ2Rpc3BsYXktcmliYm9uLW9uLXByb2ZpbGVzJ10uc3BsaXQoJywnKTsNCiAgICAgICAgICAgIGlmIChwaS5hY3RpdmVQcm9maWxlcykgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJpYmJvblByb2ZpbGVzID0gZGlzcGxheVJpYmJvbk9uUHJvZmlsZXMuZmlsdGVyKHByb2ZpbGUgPT4gcGkuYWN0aXZlUHJvZmlsZXMuaW5jbHVkZXMocHJvZmlsZSkpOw0KICAgICAgICAgICAgICAgIGlmIChyaWJib25Qcm9maWxlcy5sZW5ndGggIT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgcGkucmliYm9uRW52ID0gcmliYm9uUHJvZmlsZXNbMF07DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHBpLmluUHJvZHVjdGlvbiA9IHBpLmFjdGl2ZVByb2ZpbGVzLmluY2x1ZGVzKCdwcm9kJyk7DQogICAgICAgICAgICAgICAgcGkuc3dhZ2dlckVuYWJsZWQgPSBwaS5hY3RpdmVQcm9maWxlcy5pbmNsdWRlcygnc3dhZ2dlcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHBpOw0KICAgICAgICB9KSwgc2hhcmVSZXBsYXkoKSk7DQogICAgICAgIHJldHVybiB0aGlzLnByb2ZpbGVJbmZvJDsNCiAgICB9DQp9Ow0KUHJvZmlsZVNlcnZpY2UgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWw0KICAgIEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSksDQogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEh0dHBDbGllbnQgIT09ICJ1bmRlZmluZWQiICYmIEh0dHBDbGllbnQpID09PSAiZnVuY3Rpb24iID8gX2EgOiBPYmplY3RdKQ0KXSwgUHJvZmlsZVNlcnZpY2UpOw0KZXhwb3J0IHsgUHJvZmlsZVNlcnZpY2UgfTsNCg=="},{"version":3,"file":"C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","sourceRoot":"","sources":["C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\adrian.briano.garcia\\Documents\\LearningPatterns\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAGlD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAGnD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,cAAc,GAAG,iBAAiB,CAAC;IAGd,CAAC;IAExC,cAAc;QACZ,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,WAAwB,EAAE,EAAE;YAC/B,MAAM,EAAE,GAAG,IAAI,WAAW,EAAE,CAAC;YAC7B,EAAE,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;YAC/C,MAAM,uBAAuB,GAAG,WAAW,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrF,IAAI,EAAE,CAAC,cAAc,EAAE;gBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;iBAClC;gBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC3D;YACD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,EACF,WAAW,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF,CAAA;AA9BY,cAAc;IAD1B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKP,UAAU,oBAAV,UAAU;GAJzB,cAAc,CA8B1B;SA9BY,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { ProfileInfo } from './profile-info.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileService {\n  private infoUrl = SERVER_API_URL + 'management/info';\n  private profileInfo$: Observable<ProfileInfo>;\n\n  constructor(private http: HttpClient) {}\n\n  getProfileInfo(): Observable<ProfileInfo> {\n    if (this.profileInfo$) {\n      return this.profileInfo$;\n    }\n\n    this.profileInfo$ = this.http.get<ProfileInfo>(this.infoUrl).pipe(\n      map((profileInfo: ProfileInfo) => {\n        const pi = new ProfileInfo();\n        pi.activeProfiles = profileInfo.activeProfiles;\n        const displayRibbonOnProfiles = profileInfo['display-ribbon-on-profiles'].split(',');\n        if (pi.activeProfiles) {\n          const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\n          if (ribbonProfiles.length !== 0) {\n            pi.ribbonEnv = ribbonProfiles[0];\n          }\n          pi.inProduction = pi.activeProfiles.includes('prod');\n          pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\n        }\n        return pi;\n      }),\n      shareReplay()\n    );\n    return this.profileInfo$;\n  }\n}\n"]}]}